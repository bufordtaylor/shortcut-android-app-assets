%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.3 (Build 13D65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 80 80
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 80 80
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.847 0.847 0.847 sc
q
40 0 m
62.091389 0 80 17.908609 80 40 c
80 62.091389 62.091389 80 40 80 c
17.908609 80 0 62.091389 0 40 c
0 17.908609 17.908609 0 40 0 c
h
40 0 m
W*
0 0 80 80 rc
-5 85 m
85 85 l
85 -5 l
-5 -5 l
h
-5 85 m
f*
Q
1 1 1 sc
q
39.99519 69.090912 m
55.90852 69.090912 68.808777 56.179817 68.808777 40.253002 c
68.808777 34.216625 66.954323 28.614038 63.786472 23.982912 c
63.638668 24.141069 63.47451 24.277201 63.292191 24.384205 c
66.372368 28.905319 68.174149 34.368282 68.174149 40.253002 c
68.174149 55.829075 55.558075 68.455627 39.99519 68.455627 c
24.432426 68.455627 11.816228 55.829075 11.816228 40.253002 c
11.816228 34.368282 13.61801 28.905079 16.698307 24.384205 c
16.515869 24.277201 16.35183 24.141069 16.204027 23.982912 c
13.036057 28.614038 11.1816 34.216625 11.1816 40.253002 c
11.1816 56.179817 24.08186 69.090912 39.99519 69.090912 c
W*
0 0 80 80 rc
6.1815996 74.090912 m
73.808777 74.090912 l
73.808777 18.982912 l
6.1815996 18.982912 l
h
6.1815996 74.090912 m
f*
Q
q
14.92575 11.942292 m
30.036686 11.942292 l
30.227903 11.942292 30.384005 11.78618 30.384005 11.594801 c
30.384005 11.152343 l
30.384005 10.960964 30.227903 10.804852 30.036686 10.804852 c
14.92575 10.804852 l
14.734773 10.804852 14.57855 10.960964 14.57855 11.152343 c
14.57855 11.594801 l
14.57855 11.78618 14.734773 11.942292 14.92575 11.942292 c
14.92575 11.942292 l
h
49.953575 11.942292 m
65.064507 11.942292 l
65.255608 11.942292 65.411591 11.78618 65.411591 11.594801 c
65.411591 11.152343 l
65.411591 10.960964 65.255608 10.804852 65.064507 10.804852 c
49.953575 10.804852 l
49.762356 10.804852 49.606133 10.960964 49.606133 11.152343 c
49.606133 11.594801 l
49.606133 11.78618 49.762356 11.942292 49.953575 11.942292 c
49.953575 11.942292 l
h
51.714104 17.494926 m
51.087173 13.491498 l
52.360039 13.758224 54.170959 13.795898 54.616894 13.795898 c
59.80769 13.795898 l
60.271305 13.795898 62.476448 13.807935 63.928024 13.510515 c
63.304218 17.494926 l
63.242401 17.481325 63.178783 17.473864 63.114925 17.473864 c
51.903156 17.473864 l
51.839539 17.473864 51.775799 17.481085 51.714104 17.494926 c
51.714104 17.494926 l
h
50.514721 13.341284 m
51.21381 17.805708 l
51.102928 17.946533 51.043278 18.121422 51.067932 18.309551 c
51.169552 19.078316 51.828236 23.037573 52.68956 23.037573 c
55.902626 23.874222 59.115456 23.879639 62.328526 23.037573 c
63.19009 23.037573 63.848648 19.077835 63.949909 18.309551 c
63.974804 18.121662 63.915154 17.946774 63.804512 17.805948 c
64.500237 13.361746 l
64.943527 13.21454 65.230713 13.017505 65.230713 12.753787 c
65.230713 12.543872 l
65.230713 12.352974 65.074852 12.196621 64.883873 12.196621 c
50.134209 12.196621 l
49.94347 12.196621 49.787251 12.352974 49.787251 12.543872 c
49.787251 12.753787 l
49.787251 13.004866 50.076241 13.196004 50.514721 13.341284 c
50.514721 13.341284 l
h
32.439541 11.942292 m
47.550476 11.942292 l
47.741695 11.942292 47.897797 11.78618 47.897797 11.594801 c
47.897797 11.152343 l
47.897797 10.960964 47.741695 10.804852 47.550476 10.804852 c
32.439541 10.804852 l
32.248322 10.804852 32.092342 10.960964 32.092342 11.152343 c
32.092342 11.594801 l
32.092342 11.78618 32.248322 11.942292 32.439541 11.942292 c
32.439541 11.942292 l
h
34.200073 17.494926 m
33.573261 13.491498 l
34.846004 13.758224 36.657047 13.795898 37.102741 13.795898 c
42.293659 13.795898 l
42.757511 13.795898 44.962414 13.807935 46.413872 13.510515 c
45.790188 17.494926 l
45.728371 17.481325 45.664993 17.473864 45.600891 17.473864 c
34.389126 17.473864 l
34.325386 17.473864 34.262009 17.481085 34.200073 17.494926 c
34.200073 17.494926 l
h
33.000931 13.341284 m
33.699657 17.805708 l
33.589016 17.946533 33.529125 18.121422 33.55402 18.309551 c
33.655521 19.078316 34.314442 23.037573 35.175648 23.037573 c
38.388714 23.874222 41.601421 23.879639 44.814732 23.037573 c
45.675816 23.037573 46.334618 19.077835 46.436119 18.309551 c
46.460773 18.121662 46.401123 17.946774 46.290722 17.805948 c
46.986202 13.361746 l
47.429733 13.21454 47.716801 13.017505 47.716801 12.753787 c
47.716801 12.543872 l
47.716801 12.352974 47.560577 12.196621 47.369843 12.196621 c
32.620419 12.196621 l
32.42944 12.196621 32.273216 12.352974 32.273216 12.543872 c
32.273216 12.753787 l
32.273216 13.004866 32.562328 13.196004 33.000931 13.341284 c
33.000931 13.341284 l
h
16.686161 17.494926 m
16.059469 13.491498 l
17.332094 13.758224 19.143135 13.795898 19.588951 13.795898 c
24.779865 13.795898 l
25.243601 13.795898 27.448624 13.807935 28.90008 13.510515 c
28.276274 17.494926 l
28.214579 17.481325 28.150961 17.473864 28.087101 17.473864 c
16.875456 17.473864 l
16.811596 17.473864 16.748096 17.481085 16.686161 17.494926 c
16.686161 17.494926 l
h
15.487018 13.341284 m
16.185867 17.805708 l
16.075344 17.946533 16.015333 18.121422 16.040348 18.309551 c
16.141729 19.078316 16.800411 23.037573 17.661856 23.037573 c
20.874804 23.874222 24.087751 23.879639 27.300821 23.037573 c
28.162024 23.037573 28.820705 19.077835 28.922207 18.309551 c
28.946981 18.121662 28.887451 17.946774 28.77681 17.805948 c
29.47241 13.361746 l
29.915581 13.21454 30.203009 13.017505 30.203009 12.753787 c
30.203009 12.543872 l
30.203009 12.352974 30.046787 12.196621 29.85593 12.196621 c
15.106385 12.196621 l
14.915407 12.196621 14.759426 12.352974 14.759426 12.543872 c
14.759426 12.753787 l
14.759426 13.004866 15.048538 13.196004 15.487018 13.341284 c
15.487018 13.341284 l
h
15.487018 13.341284 m
W*
0 0 80 80 rc
9.5785503 28.667093 m
70.411591 28.667093 l
70.411591 5.8048515 l
9.5785503 5.8048515 l
h
9.5785503 28.667093 m
f*
Q
q
56.73275 60.571842 m
60.168118 57.128105 53.351826 47.188229 48.330952 47.254658 c
47.560833 47.264523 46.755943 47.298725 46.082253 47.38554 c
45.703094 47.3349 45.235382 47.192177 44.835888 46.823204 c
41.462181 43.650444 l
57.924667 27.873447 l
57.930569 27.868843 57.938442 27.864897 57.946312 27.85832 c
58.145077 27.659037 57.706879 26.897415 56.970215 26.157499 c
56.230923 25.416924 55.470642 24.978235 55.272537 25.178835 c
55.2686 25.182781 55.265976 25.186069 55.263351 25.190016 c
34.851868 46.996181 l
34.851868 46.996181 34.437943 47.585484 33.450691 47.465122 c
32.378166 47.325691 l
31.978672 47.273731 31.633627 47.108646 31.215767 47.206646 c
30.96715 47.263206 30.73559 47.402641 30.518459 47.576935 c
30.178007 47.851852 29.879536 48.218853 29.642727 48.505611 c
25.058735 54.050053 l
22.192757 57.582577 l
22.192757 57.582577 21.363598 59.139362 22.806099 58.137024 c
29.432812 51.147606 l
29.438061 51.141029 29.440029 51.134453 29.445932 51.128532 c
29.554169 51.020012 29.723412 51.01804 29.829681 51.121956 c
29.836897 51.130505 29.83952 51.138397 29.845425 51.147606 c
29.875599 51.171284 29.895279 51.208771 29.897903 51.260075 c
29.914303 51.347549 29.893967 51.439625 29.825089 51.508026 c
29.825089 51.508026 29.824432 51.509342 29.824432 51.510658 c
29.820498 51.515263 29.819185 51.519207 29.817217 51.524471 c
23.308578 58.57045 l
23.308578 58.57045 22.735252 59.127525 22.939262 59.560951 c
22.939262 59.560951 23.359089 59.753658 23.879282 59.178169 c
30.767733 52.514973 l
30.767733 52.514973 30.771013 52.514313 30.77626 52.512341 c
30.909424 52.402504 31.106874 52.407764 31.234135 52.534046 c
31.365332 52.666245 31.367298 52.879997 31.236103 53.014168 c
31.236103 53.018772 l
24.537231 59.837845 l
24.537231 59.837845 23.245605 61.660999 25.177467 60.410046 c
32.014095 53.799465 l
32.014095 53.799465 32.021313 53.794205 32.028526 53.79026 c
32.031807 53.786312 32.033775 53.783024 32.035744 53.779736 c
32.164314 53.652142 32.371605 53.653458 32.499519 53.780396 c
32.622845 53.903385 32.626781 54.096748 32.517231 54.226318 c
32.517231 54.231579 l
25.644526 60.844131 l
25.644526 60.844131 24.56019 62.389732 26.237532 61.502491 c
26.486149 61.282818 26.736732 61.063145 26.987318 60.842815 c
27.600658 60.298237 28.215313 59.75629 28.830622 59.21434 c
29.596807 58.536907 30.359713 57.858814 31.129833 57.187298 c
31.842228 56.564453 32.553967 55.93832 33.263081 55.309555 c
33.842312 54.793259 34.435974 54.293404 34.98175 53.7383 c
35.285469 53.42918 35.58263 53.089146 35.882412 52.788578 c
35.882412 52.788578 36.497066 52.080231 36.169075 51.022644 c
36.030663 50.372173 l
36.030663 50.372173 35.71973 49.402061 36.358654 48.541126 c
40.225658 44.835625 l
43.553448 48.115593 l
43.553448 48.115593 43.977211 48.465492 44.10775 49.363914 c
44.01329 49.959137 43.763359 50.747063 43.878815 51.477116 c
44.133335 53.093094 45.031372 55.491737 47.255802 57.720695 c
50.317917 60.790855 54.808758 62.500229 56.73275 60.571842 c
56.73275 60.571842 l
h
39.063259 41.077507 m
25.008224 25.582008 l
25.0056 25.576746 25.003633 25.571486 24.998384 25.567539 c
24.803558 25.3722 24.057709 25.801682 23.334818 26.527128 c
22.608648 27.253891 22.180948 28.001699 22.376431 28.197037 c
22.379711 28.200327 22.384958 28.201641 22.388239 28.205587 c
37.734901 42.49683 l
39.063259 41.077507 l
39.063259 41.077507 l
h
39.063259 41.077507 m
W*
0 0 80 80 rc
16.955608 66.777229 m
62.994205 66.777229 l
62.994205 20.130236 l
16.955608 20.130236 l
h
16.955608 66.777229 m
f*
ep
end
%%Trailer
%%EOF
