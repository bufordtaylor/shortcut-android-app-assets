%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.4 (Build 13E28) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 100 100
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 100 100
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
0.847 0.847 0.847 sc
q
50 0 m
77.614235 0 100 22.385763 100 50 c
100 77.614235 77.614235 100 50 100 c
22.385763 100 0 77.614235 0 50 c
0 22.385763 22.385763 0 50 0 c
h
50 0 m
W*
0 0 100 100 rc
-5 105 m
105 105 l
105 -5 l
-5 -5 l
h
-5 105 m
f*
Q
1 1 1 sc
q
49.993988 86.36364 m
69.885651 86.36364 86.010971 70.22477 86.010971 50.316254 c
86.010971 42.770782 83.692902 35.767548 79.733093 29.97864 c
79.54834 30.176336 79.34314 30.346502 79.115242 30.480257 c
82.965462 36.131649 85.21769 42.960354 85.21769 50.316254 c
85.21769 69.786346 69.447594 85.569534 49.993988 85.569534 c
30.540533 85.569534 14.770285 69.786346 14.770285 50.316254 c
14.770285 42.960354 17.022512 36.131348 20.872885 30.480257 c
20.644836 30.346502 20.439787 30.176336 20.255033 29.97864 c
16.295071 35.767548 13.976999 42.770782 13.976999 50.316254 c
13.976999 70.22477 30.102324 86.36364 49.993988 86.36364 c
W*
0 0 100 100 rc
8.9769993 91.36364 m
91.010971 91.36364 l
91.010971 24.97864 l
8.9769993 24.97864 l
h
8.9769993 91.36364 m
f*
Q
q
18.657188 14.927865 m
37.545856 14.927865 l
37.784878 14.927865 37.980007 14.732725 37.980007 14.493502 c
37.980007 13.940429 l
37.980007 13.701205 37.784878 13.506064 37.545856 13.506064 c
18.657188 13.506064 l
18.418465 13.506064 18.223188 13.701205 18.223188 13.940429 c
18.223188 14.493502 l
18.223188 14.732725 18.418465 14.927865 18.657188 14.927865 c
18.657188 14.927865 l
h
62.441967 14.927865 m
81.330635 14.927865 l
81.569511 14.927865 81.764488 14.732725 81.764488 14.493502 c
81.764488 13.940429 l
81.764488 13.701205 81.569511 13.506064 81.330635 13.506064 c
62.441967 13.506064 l
62.202946 13.506064 62.007668 13.701205 62.007668 13.940429 c
62.007668 14.493502 l
62.007668 14.732725 62.202946 14.927865 62.441967 14.927865 c
62.441967 14.927865 l
h
64.642632 21.868658 m
63.858967 16.864372 l
65.45005 17.197781 67.713699 17.244873 68.271118 17.244873 c
74.759613 17.244873 l
75.339127 17.244873 78.095558 17.259918 79.910027 16.888144 c
79.130272 21.868658 l
79.053001 21.851658 78.97348 21.842329 78.893654 21.842329 c
64.878944 21.842329 l
64.799423 21.842329 64.719749 21.851357 64.642632 21.868658 c
64.642632 21.868658 l
h
63.143402 16.676605 m
64.017265 22.257133 l
63.878658 22.433167 63.804096 22.651777 63.834915 22.886938 c
63.961941 23.847895 64.785294 28.796965 65.861946 28.796965 c
69.878281 29.842777 73.894318 29.849548 77.910652 28.796965 c
78.98761 28.796965 79.810814 23.847294 79.937386 22.886938 c
79.968506 22.652079 79.893944 22.433468 79.755638 22.257435 c
80.62529 16.702183 l
81.179405 16.518175 81.538391 16.271881 81.538391 15.942233 c
81.538391 15.67984 l
81.538391 15.441217 81.343567 15.245777 81.104843 15.245777 c
62.667759 15.245777 l
62.42934 15.245777 62.234062 15.441217 62.234062 15.67984 c
62.234062 15.942233 l
62.234062 16.256083 62.595303 16.495005 63.143402 16.676605 c
63.143402 16.676605 l
h
40.549427 14.927865 m
59.438095 14.927865 l
59.67712 14.927865 59.872246 14.732725 59.872246 14.493502 c
59.872246 13.940429 l
59.872246 13.701205 59.67712 13.506064 59.438095 13.506064 c
40.549427 13.506064 l
40.310406 13.506064 40.115429 13.701205 40.115429 13.940429 c
40.115429 14.493502 l
40.115429 14.732725 40.310406 14.927865 40.549427 14.927865 c
40.549427 14.927865 l
h
42.750092 21.868658 m
41.966576 16.864372 l
43.557507 17.197781 45.821308 17.244873 46.378429 17.244873 c
52.867073 17.244873 l
53.446892 17.244873 56.203018 17.259918 58.017338 16.888144 c
57.237732 21.868658 l
57.160465 21.851658 57.081242 21.842329 57.001114 21.842329 c
42.986408 21.842329 l
42.906734 21.842329 42.827511 21.851357 42.750092 21.868658 c
42.750092 21.868658 l
h
41.251163 16.676605 m
42.124573 22.257133 l
41.986271 22.433167 41.911407 22.651777 41.942524 22.886938 c
42.069401 23.847895 42.893055 28.796965 43.969559 28.796965 c
47.985893 29.842777 52.001778 29.849548 56.018414 28.796965 c
57.094769 28.796965 57.91827 23.847294 58.045147 22.886938 c
58.075966 22.652079 58.001404 22.433468 57.8634 22.257435 c
58.732754 16.702183 l
59.287167 16.518175 59.646 16.271881 59.646 15.942233 c
59.646 15.67984 l
59.646 15.441217 59.450722 15.245777 59.212303 15.245777 c
40.77552 15.245777 l
40.5368 15.245777 40.341522 15.441217 40.341522 15.67984 c
40.341522 15.942233 l
40.341522 16.256083 40.702911 16.495005 41.251163 16.676605 c
41.251163 16.676605 l
h
20.8577 21.868658 m
20.074337 16.864372 l
21.665117 17.197781 23.928919 17.244873 24.486189 17.244873 c
30.974833 17.244873 l
31.554501 17.244873 34.31078 17.259918 36.125099 16.888144 c
35.345345 21.868658 l
35.268223 21.851658 35.188702 21.842329 35.108875 21.842329 c
21.094318 21.842329 l
21.014494 21.842329 20.93512 21.851357 20.8577 21.868658 c
20.8577 21.868658 l
h
19.358772 16.676605 m
20.232334 22.257133 l
20.094181 22.433167 20.019167 22.651777 20.050436 22.886938 c
20.177162 23.847895 21.000513 28.796965 22.077318 28.796965 c
26.093504 29.842777 30.10969 29.849548 34.126026 28.796965 c
35.20253 28.796965 36.025883 23.847294 36.15276 22.886938 c
36.183727 22.652079 36.109314 22.433468 35.971012 22.257435 c
36.840515 16.702183 l
37.394474 16.518175 37.753761 16.271881 37.753761 15.942233 c
37.753761 15.67984 l
37.753761 15.441217 37.558483 15.245777 37.319912 15.245777 c
18.882982 15.245777 l
18.644258 15.245777 18.449284 15.441217 18.449284 15.67984 c
18.449284 15.942233 l
18.449284 16.256083 18.810673 16.495005 19.358772 16.676605 c
19.358772 16.676605 l
h
19.358772 16.676605 m
W*
0 0 100 100 rc
13.223188 34.583866 m
86.764488 34.583866 l
86.764488 8.5060644 l
13.223188 8.5060644 l
h
13.223188 34.583866 m
f*
Q
q
70.915939 75.714798 m
75.210152 71.410133 66.689781 58.985287 60.413689 59.068321 c
59.451038 59.080654 58.444927 59.123405 57.602814 59.231926 c
57.128868 59.168621 56.544228 58.990219 56.044861 58.529007 c
51.827728 54.563053 l
72.40583 34.841808 l
72.413216 34.836056 72.42305 34.831123 72.432892 34.822899 c
72.681343 34.573795 72.133598 33.621769 71.212769 32.696873 c
70.288658 31.771156 69.338303 31.222795 69.090668 31.473545 c
69.085754 31.478477 69.082474 31.482588 69.079193 31.48752 c
43.564835 58.745224 l
43.564835 58.745224 43.047428 59.481853 41.813366 59.331406 c
40.472706 59.157112 l
39.973339 59.092163 39.542034 58.885811 39.019711 59.008308 c
38.708939 59.07901 38.419487 59.253304 38.148075 59.471165 c
37.722507 59.814816 37.349419 60.273563 37.05341 60.632011 c
31.32342 67.562569 l
27.740946 71.978226 l
27.740946 71.978226 26.704496 73.924202 28.507624 72.67128 c
36.791016 63.934509 l
36.797577 63.926285 36.800034 63.918064 36.807415 63.910667 c
36.942711 63.775013 37.154266 63.772549 37.287102 63.902443 c
37.29612 63.913132 37.2994 63.922997 37.306782 63.934509 c
37.344498 63.964104 37.369099 64.010963 37.372379 64.075089 c
37.392879 64.184433 37.367458 64.29953 37.281361 64.385033 c
37.281361 64.385033 37.28054 64.386681 37.28054 64.388321 c
37.27562 64.394081 37.273983 64.39901 37.271523 64.405586 c
29.135725 73.213058 l
29.135725 73.213058 28.419065 73.909409 28.674078 74.451187 c
28.674078 74.451187 29.198862 74.69207 29.849102 73.97271 c
38.459667 65.643715 l
38.459667 65.643715 38.463764 65.642891 38.470325 65.640427 c
38.63678 65.503128 38.883595 65.509705 39.042667 65.667557 c
39.206665 65.832802 39.209122 66.099998 39.045128 66.267708 c
39.045128 66.273468 l
30.671537 74.797302 l
30.671537 74.797302 29.057007 77.076248 31.471834 75.512558 c
40.01762 67.249336 l
40.01762 67.249336 40.026638 67.24276 40.03566 67.237823 c
40.039757 67.232895 40.042217 67.228783 40.044678 67.22467 c
40.205395 67.065178 40.464504 67.066818 40.624401 67.225494 c
40.778557 67.379227 40.783478 67.620934 40.646542 67.782898 c
40.646542 67.789474 l
32.055656 76.055161 l
32.055656 76.055161 30.700237 77.987167 32.796913 76.878113 c
33.107685 76.603523 33.420918 76.328934 33.734146 76.05352 c
34.500824 75.372795 35.269142 74.695358 36.038277 74.017929 c
36.99601 73.171135 37.949642 72.323517 38.912292 71.484123 c
39.802784 70.705566 40.692459 69.922897 41.578854 69.13694 c
42.302891 68.49157 43.044968 67.866753 43.727188 67.172874 c
44.106838 66.786476 44.478287 66.361435 44.853016 65.985718 c
44.853016 65.985718 45.62133 65.100288 45.211346 63.778301 c
45.03833 62.965218 l
45.03833 62.965218 44.649662 61.752575 45.448318 60.676407 c
50.282074 56.044529 l
54.441807 60.144489 l
54.441807 60.144489 54.971512 60.581863 55.134689 61.704891 c
55.016613 62.448921 54.704201 63.43383 54.848515 64.346397 c
55.166668 66.366364 56.289215 69.36467 59.069752 72.150871 c
62.897396 75.988571 68.510948 78.125282 70.915939 75.714798 c
70.915939 75.714798 l
h
48.829075 51.346882 m
31.260281 31.97751 l
31.257 31.970932 31.254541 31.964355 31.247982 31.959423 c
31.004448 31.71525 30.072136 32.252102 29.168524 33.158909 c
28.260811 34.067364 27.726187 35.002125 27.970539 35.246296 c
27.974638 35.250408 27.981199 35.252052 27.985298 35.256985 c
47.168625 53.121037 l
48.829075 51.346882 l
48.829075 51.346882 l
h
48.829075 51.346882 m
W*
0 0 100 100 rc
22.44451 82.221535 m
77.492752 82.221535 l
77.492752 26.412794 l
22.44451 26.412794 l
h
22.44451 82.221535 m
f*
ep
end
%%Trailer
%%EOF
