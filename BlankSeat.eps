%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.9.3 (Build 13D65) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 320 325
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 320 325
%%BeginPageSetup
cg_md begin
bp
sdmtx
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
0.60000002 i
/Cs1 SC
1 1 1 sc
q
159.97514 312.9697 m
242.19402 312.9697 308.84537 246.26239 308.84537 163.97385 c
308.84537 132.7859 299.26401 103.8392 282.89679 79.911705 c
282.13312 80.728859 281.28497 81.432205 280.34299 81.985062 c
296.25723 105.34415 305.56644 133.56947 305.56644 163.97385 c
305.56644 244.45023 240.38338 309.68741 159.97514 309.68741 c
79.567535 309.68741 14.383844 244.45023 14.383844 163.97385 c
14.383844 133.56947 23.693048 105.34291 39.607922 81.985062 c
38.665321 81.432205 37.817787 80.728859 37.054134 79.911705 c
20.686291 103.8392 11.104932 132.7859 11.104932 163.97385 c
11.104932 246.26239 77.756271 312.9697 159.97514 312.9697 c
W*
0 0 320 325 rc
6.1049318 317.9697 m
313.84537 317.9697 l
313.84537 74.911705 l
6.1049318 74.911705 l
h
6.1049318 317.9697 m
f*
Q
q
30.449709 17.701843 m
108.52287 17.701843 l
109.51083 17.701843 110.31736 16.895264 110.31736 15.906472 c
110.31736 13.620438 l
110.31736 12.631647 109.51083 11.825068 108.52287 11.825068 c
30.449709 11.825068 l
29.46299 11.825068 28.655844 12.631647 28.655844 13.620438 c
28.655844 15.906472 l
28.655844 16.895264 29.46299 17.701843 30.449709 17.701843 c
30.449709 17.701843 l
h
211.4268 17.701843 m
289.49997 17.701843 l
290.4873 17.701843 291.29321 16.895264 291.29321 15.906472 c
291.29321 13.620438 l
291.29321 12.631647 290.4873 11.825068 289.49997 11.825068 c
211.4268 11.825068 l
210.43883 11.825068 209.63168 12.631647 209.63168 13.620438 c
209.63168 15.906472 l
209.63168 16.895264 210.43883 17.701843 211.4268 17.701843 c
211.4268 17.701843 l
h
220.52287 46.390457 m
217.28372 25.706074 l
223.8602 27.084162 233.21661 27.278811 235.52061 27.278811 c
262.33972 27.278811 l
264.73508 27.278811 276.1283 27.340998 283.62811 25.804331 c
280.40512 46.390457 l
280.08575 46.320183 279.75705 46.281628 279.42709 46.281628 c
221.49965 46.281628 l
221.17094 46.281628 220.84163 46.318939 220.52287 46.390457 c
220.52287 46.390457 l
h
214.32607 24.929966 m
217.93802 47.996155 l
217.36513 48.723755 217.05693 49.627346 217.18431 50.599346 c
217.70937 54.571301 221.11255 75.027458 225.56271 75.027458 c
242.16357 79.350151 258.76318 79.378136 275.36404 75.027458 c
279.81546 75.027458 283.21802 54.568813 283.74121 50.599346 c
283.86981 49.62859 283.56165 48.724998 282.98999 47.997398 c
286.58453 25.035685 l
288.87488 24.275126 290.35867 23.257105 290.35867 21.894564 c
290.35867 20.810003 l
290.35867 19.8237 289.55341 19.015877 288.56668 19.015877 c
212.36008 19.015877 l
211.3746 19.015877 210.56746 19.8237 210.56746 20.810003 c
210.56746 21.894564 l
210.56746 23.191809 212.06058 24.179356 214.32607 24.929966 c
214.32607 24.929966 l
h
120.93763 17.701843 m
199.0108 17.701843 l
199.99876 17.701843 200.80528 16.895264 200.80528 15.906472 c
200.80528 13.620438 l
200.80528 12.631647 199.99876 11.825068 199.0108 11.825068 c
120.93763 11.825068 l
119.94967 11.825068 119.14377 12.631647 119.14377 13.620438 c
119.14377 15.906472 l
119.14377 16.895264 119.94967 17.701843 120.93763 17.701843 c
120.93763 17.701843 l
h
130.03371 46.390457 m
126.79518 25.706074 l
133.37103 27.084162 142.72807 27.278811 145.03084 27.278811 c
171.85057 27.278811 l
174.24715 27.278811 185.63914 27.340998 193.13834 25.804331 c
189.91595 46.390457 l
189.59659 46.320183 189.26912 46.281628 188.93794 46.281628 c
131.01048 46.281628 l
130.68117 46.281628 130.35371 46.318939 130.03371 46.390457 c
130.03371 46.390457 l
h
123.83813 24.929966 m
127.44823 47.996155 l
126.87658 48.723755 126.56715 49.627346 126.69577 50.599346 c
127.22019 54.571301 130.62462 75.027458 135.07417 75.027458 c
151.67503 79.350151 168.27402 79.378136 184.87611 75.027458 c
189.32504 75.027458 192.72885 54.568813 193.25328 50.599346 c
193.38066 49.62859 193.07246 48.724998 192.50206 47.997398 c
196.09538 25.035685 l
198.38695 24.275126 199.87013 23.257105 199.87013 21.894564 c
199.87013 20.810003 l
199.87013 19.8237 199.06299 19.015877 198.07751 19.015877 c
121.87215 19.015877 l
120.88544 19.015877 120.07829 19.8237 120.07829 20.810003 c
120.07829 21.894564 l
120.07829 23.191809 121.57204 24.179356 123.83813 24.929966 c
123.83813 24.929966 l
h
39.545166 46.390457 m
36.307262 25.706074 l
42.882484 27.084162 52.239532 27.278811 54.542912 27.278811 c
81.36264 27.278811 l
83.758598 27.278811 95.151222 27.340998 102.65041 25.804331 c
99.427414 46.390457 l
99.108658 46.320183 98.779961 46.281628 98.45002 46.281628 c
40.523186 46.281628 l
40.193241 46.281628 39.865166 46.318939 39.545166 46.390457 c
39.545166 46.390457 l
h
33.349594 24.929966 m
36.960312 47.996155 l
36.389282 48.723755 36.079224 49.627346 36.208466 50.599346 c
36.732273 54.571301 40.135456 75.027458 44.586254 75.027458 c
61.186485 79.350151 77.78672 79.378136 94.387573 75.027458 c
98.837128 75.027458 102.24031 54.568813 102.76474 50.599346 c
102.89274 49.62859 102.58517 48.724998 102.01351 47.997398 c
105.60746 25.035685 l
107.89716 24.275126 109.38221 23.257105 109.38221 21.894564 c
109.38221 20.810003 l
109.38221 19.8237 108.57507 19.015877 107.58897 19.015877 c
31.38299 19.015877 l
30.396273 19.015877 29.590368 19.8237 29.590368 20.810003 c
29.590368 21.894564 l
29.590368 23.191809 31.084116 24.179356 33.349594 24.929966 c
33.349594 24.929966 l
h
33.349594 24.929966 m
W*
0 0 320 325 rc
23.655844 83.279976 m
296.29321 83.279976 l
296.29321 6.825067 l
23.655844 6.825067 l
h
23.655844 83.279976 m
f*
Q
q
246.45255 268.95453 m
264.20193 251.16188 228.98444 199.80586 203.04326 200.14906 c
199.0643 200.20004 194.9057 200.37674 191.42497 200.8253 c
189.46599 200.56364 187.04947 199.82625 184.98543 197.91989 c
167.5546 181.52728 l
252.61078 100.01281 l
252.64128 99.989021 252.68195 99.968636 252.72261 99.934654 c
253.74956 98.905022 251.48555 94.969978 247.67944 91.147079 c
243.85977 87.320778 239.93166 85.054222 238.90811 86.090652 c
238.88777 86.111038 238.87422 86.128029 238.86066 86.148422 c
133.40131 198.8136 l
133.40131 198.8136 131.26271 201.85832 126.16191 201.23647 c
120.62051 200.51607 l
118.55647 200.24762 116.77374 199.39468 114.6148 199.901 c
113.33028 200.19324 112.13388 200.91365 111.01205 201.81415 c
109.25303 203.23457 107.71093 205.13074 106.48742 206.61232 c
82.803467 235.25861 l
67.995911 253.50999 l
67.995911 253.50999 63.711922 261.55338 71.164841 256.3746 c
105.40286 220.26263 l
105.42998 220.22865 105.44015 220.19467 105.47065 220.16408 c
106.02987 219.60339 106.9043 219.5932 107.45335 220.1301 c
107.49063 220.17429 107.50419 220.21506 107.53469 220.26263 c
107.6906 220.38496 107.79227 220.57866 107.80583 220.84372 c
107.89056 221.29567 107.78549 221.77141 107.42963 222.12482 c
107.42963 222.12482 107.42624 222.13161 107.42624 222.1384 c
107.4059 222.16219 107.39912 222.18257 107.38895 222.20976 c
73.760994 258.61398 l
73.760994 258.61398 70.798805 261.49222 71.852852 263.73157 c
71.852852 263.73157 74.021965 264.72723 76.709625 261.75388 c
112.29995 227.32736 l
112.29995 227.32736 112.31689 227.32396 112.34401 227.31377 c
113.03203 226.74628 114.05219 226.77345 114.70969 227.4259 c
115.38754 228.10893 115.39771 229.21332 114.71986 229.90654 c
114.71986 229.93033 l
80.109024 265.1622 l
80.109024 265.1622 73.435631 274.58182 83.416916 268.11856 c
118.73949 233.96391 l
118.73949 233.96391 118.77677 233.93672 118.81406 233.91634 c
118.831 233.89595 118.84117 233.87897 118.85134 233.86197 c
119.51562 233.20273 120.58662 233.20953 121.24753 233.86537 c
121.8847 234.50082 121.90504 235.49988 121.33904 236.1693 c
121.33904 236.19649 l
85.830048 270.36133 l
85.830048 270.36133 80.227646 278.34695 88.893913 273.76288 c
90.178436 272.6279 91.473122 271.49292 92.767807 270.35455 c
95.936737 267.54089 99.11245 264.74081 102.29155 261.94077 c
106.25018 258.44067 110.19185 254.93721 114.17081 251.46771 c
117.85152 248.24968 121.52883 245.01465 125.19259 241.76604 c
128.18529 239.0985 131.25253 236.51591 134.07237 233.64789 c
135.64159 232.05077 137.17691 230.29393 138.7258 228.74098 c
138.7258 228.74098 141.9015 225.08119 140.20689 219.61699 c
139.49176 216.25623 l
139.49176 216.25623 137.88527 211.24397 141.18637 206.79582 c
161.16589 187.65073 l
178.35948 204.59723 l
178.35948 204.59723 180.54892 206.40503 181.22337 211.04689 c
180.73532 214.12221 179.44403 218.19316 180.04053 221.9651 c
181.35556 230.31432 185.99542 242.70732 197.4883 254.2236 c
213.30923 270.08609 236.51192 278.91785 246.45255 268.95453 c
246.45255 268.95453 l
h
155.16019 168.23378 m
82.542496 88.173706 l
82.528938 88.146523 82.518768 88.119339 82.491653 88.098946 c
81.485054 87.089706 77.631493 89.308685 73.896561 93.056831 c
70.144684 96.811768 67.934906 100.67545 68.944893 101.68469 c
68.961838 101.70168 68.988953 101.70848 69.005898 101.72887 c
148.29698 175.56696 l
155.16019 168.23378 l
155.16019 168.23378 l
h
155.16019 168.23378 m
W*
0 0 320 325 rc
61.770641 280.18234 m
257.97006 280.18234 l
257.97006 80.839546 l
61.770641 80.839546 l
h
61.770641 280.18234 m
f*
ep
end
%%Trailer
%%EOF
